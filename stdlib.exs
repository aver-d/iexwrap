defmodule Stdlib do
  import Enum

  @elixir_modules [
    Access,
    Agent,
    Agent.Server,
    Application,
    ArgumentError,
    ArithmeticError,
    Atom,
    BadArityError,
    BadBooleanError,
    BadFunctionError,
    BadMapError,
    BadStructError,
    Base,
    Behaviour,
    Bitwise,
    Calendar,
    Calendar.ISO,
    CaseClauseError,
    Code,
    Code.LoadError,
    Collectable,
    Collectable.BitString,
    Collectable.File.Stream,
    Collectable.HashDict,
    Collectable.HashSet,
    Collectable.IO.Stream,
    Collectable.List,
    Collectable.Map,
    Collectable.MapSet,
    CompileError,
    CondClauseError,
    Date,
    DateTime,
    Dict,
    Enum,
    Enum.EmptyError,
    Enum.OutOfBoundsError,
    Enumerable,
    Enumerable.File.Stream,
    Enumerable.Function,
    Enumerable.GenEvent.Stream,
    Enumerable.HashDict,
    Enumerable.HashSet,
    Enumerable.IO.Stream,
    Enumerable.List,
    Enumerable.Map,
    Enumerable.MapSet,
    Enumerable.Range,
    Enumerable.Stream,
    ErlangError,
    Exception,
    File,
    File.CopyError,
    File.Error,
    File.Stat,
    File.Stream,
    Float,
    FunctionClauseError,
    GenEvent,
    GenEvent.Stream,
    GenServer,
    HashDict,
    HashSet,
    IEx,
    IEx.App,
    IEx.Autocomplete,
    IEx.CLI,
    IEx.Config,
    IEx.Evaluator,
    IEx.Helpers,
    IEx.History,
    IEx.History.State,
    IEx.Info,
    IEx.Info.Any,
    IEx.Info.Atom,
    IEx.Info.BitString,
    IEx.Info.Float,
    IEx.Info.Function,
    IEx.Info.Integer,
    IEx.Info.List,
    IEx.Info.Map,
    IEx.Info.PID,
    IEx.Info.Port,
    IEx.Info.Reference,
    IEx.Info.Tuple,
    IEx.Introspection,
    IEx.Remsh,
    IEx.Server,
    IEx.State,
    IO,
    IO.ANSI,
    IO.ANSI.Docs,
    IO.ANSI.Sequence,
    IO.Stream,
    IO.StreamError,
    Inspect,
    Inspect.Algebra,
    Inspect.Any,
    Inspect.Atom,
    Inspect.BitString,
    Inspect.Date,
    Inspect.Error,
    Inspect.Float,
    Inspect.Function,
    Inspect.HashDict,
    Inspect.HashSet,
    Inspect.Integer,
    Inspect.List,
    Inspect.Map,
    Inspect.MapSet,
    Inspect.NaiveDateTime,
    Inspect.Opts,
    Inspect.PID,
    Inspect.Port,
    Inspect.Range,
    Inspect.Reference,
    Inspect.Regex,
    Inspect.Stream,
    Inspect.Time,
    Inspect.Tuple,
    Inspect.Version,
    Inspect.Version.Requirement,
    Integer,
    Kernel,
    Kernel.CLI,
    Kernel.ErrorHandler,
    Kernel.LexicalTracker,
    Kernel.ParallelCompiler,
    Kernel.ParallelRequire,
    Kernel.SpecialForms,
    Kernel.Typespec,
    Kernel.Utils,
    KeyError,
    Keyword,
    List,
    List.Chars,
    List.Chars.Atom,
    List.Chars.BitString,
    List.Chars.Float,
    List.Chars.Integer,
    List.Chars.List,
    Logger,
    Logger.App,
    Logger.Backends.Console,
    Logger.Config,
    Logger.ErrorHandler,
    Logger.Formatter,
    Logger.Translator,
    Logger.Utils,
    Logger.Watcher,
    Macro,
    Macro.Env,
    Map,
    MapSet,
    MatchError,
    Module,
    Module.LocalsTracker,
    NaiveDateTime,
    Node,
    OptionParser,
    OptionParser.ParseError,
    Path,
    Path.Wildcard,
    Port,
    Process,
    Protocol,
    Protocol.UndefinedError,
    Range,
    Record,
    Record.Extractor,
    Regex,
    Regex.CompileError,
    Registry,
    Registry.Partition,
    Registry.Supervisor,
    RuntimeError,
    Set,
    Stream,
    Stream.Reducers,
    String,
    String.Break,
    String.Casing,
    String.Chars,
    String.Chars.Atom,
    String.Chars.BitString,
    String.Chars.Date,
    String.Chars.DateTime,
    String.Chars.Float,
    String.Chars.Integer,
    String.Chars.List,
    String.Chars.NaiveDateTime,
    String.Chars.Time,
    String.Chars.URI,
    String.Chars.Version,
    String.Chars.Version.Requirement,
    String.Normalizer,
    String.Unicode,
    StringIO,
    Supervisor,
    Supervisor.Default,
    Supervisor.Spec,
    SyntaxError,
    System,
    SystemLimitError,
    Task,
    Task.Supervised,
    Task.Supervisor,
    Time,
    TokenMissingError,
    TryClauseError,
    Tuple,
    URI,
    UndefinedFunctionError,
    UnicodeConversionError,
    Version,
    Version.InvalidRequirementError,
    Version.InvalidVersionError,
    Version.Parser,
    Version.Parser.DSL,
    Version.Requirement,
    WithClauseError
  ]

  @erlang_modules [
    :application,
    :application_controller,
    :application_master,
    :application_starter,
    :array,
    :auth,
    :base64,
    :beam_a,
    :beam_asm,
    :beam_block,
    :beam_bool,
    :beam_bs,
    :beam_bsm,
    :beam_clean,
    :beam_dead,
    :beam_dict,
    :beam_disasm,
    :beam_except,
    :beam_flatten,
    :beam_jump,
    :beam_lib,
    :beam_listing,
    :beam_opcodes,
    :beam_peep,
    :beam_receive,
    :beam_reorder,
    :beam_split,
    :beam_trim,
    :beam_type,
    :beam_utils,
    :beam_validator,
    :beam_z,
    :binary,
    :c,
    :calendar,
    :cerl,
    :cerl_clauses,
    :cerl_inline,
    :cerl_sets,
    :cerl_trees,
    :code,
    :code_server,
    :compile,
    :core_lib,
    :core_lint,
    :core_parse,
    :core_pp,
    :core_scan,
    :dets,
    :dets_server,
    :dets_sup,
    :dets_utils,
    :dets_v8,
    :dets_v9,
    :dict,
    :digraph,
    :digraph_utils,
    :disk_log,
    :disk_log_1,
    :disk_log_server,
    :disk_log_sup,
    :dist_ac,
    :dist_util,
    :edlin,
    :edlin_expand,
    :elixir,
    :elixir_aliases,
    :elixir_bitstring,
    :elixir_bootstrap,
    :elixir_clauses,
    :elixir_code_server,
    :elixir_compiler,
    :elixir_config,
    :elixir_def,
    :elixir_def_defaults,
    :elixir_def_overridable,
    :elixir_dispatch,
    :elixir_env,
    :elixir_errors,
    :elixir_exp,
    :elixir_exp_clauses,
    :elixir_fn,
    :elixir_for,
    :elixir_import,
    :elixir_interpolation,
    :elixir_lexical,
    :elixir_locals,
    :elixir_map,
    :elixir_module,
    :elixir_parser,
    :elixir_quote,
    :elixir_rewrite,
    :elixir_scope,
    :elixir_sup,
    :elixir_tokenizer,
    :elixir_translator,
    :elixir_try,
    :elixir_utils,
    :elixir_with,
    :epp,
    :erl_anno,
    :erl_bifs,
    :erl_bits,
    :erl_boot_server,
    :erl_compile,
    :erl_ddll,
    :erl_distribution,
    :erl_epmd,
    :erl_eval,
    :erl_expand_records,
    :erl_internal,
    :erl_lint,
    :erl_parse,
    :erl_posix_msg,
    :erl_pp,
    :erl_prim_loader,
    :erl_reply,
    :erl_scan,
    :erl_tar,
    :erl_tracer,
    :erlang,
    :error_handler,
    :error_logger,
    :error_logger_file_h,
    :error_logger_tty_h,
    :erts_code_purger,
    :erts_debug,
    :erts_dirty_process_code_checker,
    :erts_internal,
    :erts_literal_area_collector,
    :escript,
    :ets,
    :eval_bits,
    :file,
    :file_io_server,
    :file_server,
    :file_sorter,
    :filelib,
    :filename,
    :gb_sets,
    :gb_trees,
    :gen,
    :gen_event,
    :gen_fsm,
    :gen_sctp,
    :gen_server,
    :gen_statem,
    :gen_tcp,
    :gen_udp,
    :global,
    :global_group,
    :global_search,
    :group,
    :heart,
    :hipe_unified_loader,
    :inet,
    :inet6_sctp,
    :inet6_tcp,
    :inet6_tcp_dist,
    :inet6_udp,
    :inet_config,
    :inet_db,
    :inet_dns,
    :inet_gethost_native,
    :inet_hosts,
    :inet_parse,
    :inet_res,
    :inet_sctp,
    :inet_tcp,
    :inet_tcp_dist,
    :inet_udp,
    :init,
    :io,
    :io_lib,
    :io_lib_format,
    :io_lib_fread,
    :io_lib_pretty,
    :kernel,
    :kernel_config,
    :lib,
    :lists,
    :local_tcp,
    :local_udp,
    :log_mf_h,
    :maps,
    :math,
    :ms_transform,
    :net,
    :net_adm,
    :net_kernel,
    :orddict,
    :ordsets,
    :os,
    :otp_internal,
    :otp_ring0,
    :pg2,
    :pool,
    :prim_eval,
    :prim_file,
    :prim_inet,
    :prim_zip,
    :proc_lib,
    :proplists,
    :qlc,
    :qlc_pt,
    :queue,
    :ram_file,
    :rand,
    :random,
    :re,
    :rec_env,
    :rpc,
    :seq_trace,
    :sets,
    :shell,
    :shell_default,
    :slave,
    :sofs,
    :standard_error,
    :string,
    :supervisor,
    :supervisor_bridge,
    :sys,
    :sys_core_dsetel,
    :sys_core_fold,
    :sys_core_fold_lists,
    :sys_core_inline,
    :sys_pre_attributes,
    :sys_pre_expand,
    :timer,
    :unicode,
    :user,
    :user_drv,
    :user_sup,
    :v3_codegen,
    :v3_core,
    :v3_kernel,
    :v3_kernel_pp,
    :v3_life,
    :win32reg,
    :wrap_log_reader,
    :zip,
    :zlib
  ]

  def remove_arity(functions) do
    functions |> Keyword.keys |> dedup
  end

  def elixir_functions(mod) do
    mod.__info__(:functions) |> remove_arity
  end

  def erlang_functions(mod) do
    mod.module_info()[:exports] |> remove_arity
  end

  def kernel_names do
    Kernel.__info__(:functions) |> remove_arity |> map(&to_string/1)
  end

  def elixir_names do
    @elixir_modules
    |> map(&elixir_functions/1)
    |> zip(@elixir_modules)
    |> flat_map(&combine/1)
  end

  def erlang_names do
    @erlang_modules
    |> map(&erlang_functions/1)
    |> zip(@erlang_modules)
    |> flat_map(&combine/1)
    |> map(fn name -> ":"<>name end)
  end

  def combine({functions, mod}) do
    map(functions, fn func -> join_name(mod, func) end)
  end

  def join_name(mod, name) do
    exp = ~r/^Elixir\./
    modname = String.replace(to_string(mod), exp, "")
    "#{modname}.#{name}"
  end

  def save(names) do
    dir = Path.join([System.user_home, ".config", "iexwrap"])
    :ok = File.mkdir_p(dir)
    path = Path.join(dir, "stdlib_#{System.version}")
    File.write!(path, join(names, "\n") <> "\n")
    path
  end

  def stdlib_names do
    concat [
      kernel_names(),
      elixir_names(),
      erlang_names()
    ]
  end

  def main do
    path = save(stdlib_names())
    IO.puts("Generated stdlib completions: #{path}")
  end

end

Stdlib.main()
